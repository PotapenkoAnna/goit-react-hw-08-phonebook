{"version":3,"file":"static/js/453.ac44ba93.chunk.js","mappings":"qRAEaA,EAAWC,EAAAA,GAAAA,IAAH,yiB,SCoBrB,EAhBiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAArBF,KACR,OACE,iCACE,SAAC,KAAD,CAASG,GAAG,YAAZ,SAAwB,cAGxB,UAACP,EAAD,YACE,uBAAII,KACJ,mBAAQI,QAAS,kBAAMN,GAASO,EAAAA,EAAAA,MAAf,EAAjB,SAA2C,iBAIlD,EClBYC,EAAYT,EAAAA,GAAAA,GAAH,uGCuBtB,EAtBiB,WACf,OACE,iCACE,SAAC,KAAD,CAASM,GAAG,IAAZ,SAAgB,UAGhB,UAACG,EAAD,YACE,yBACE,SAAC,KAAD,CAASH,GAAG,YAAZ,SAAwB,gBAI1B,yBACE,SAAC,KAAD,CAASA,GAAG,SAAZ,SAAqB,iBAO9B,E,UC4BD,EA1Ce,WACb,IAAMI,GAAaN,EAAAA,EAAAA,IAAYO,EAAAA,IACzBC,GAAYR,EAAAA,EAAAA,IAAYS,EAAAA,IAE9B,GAA8CC,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,MAEAC,EAAAA,EAAAA,YAAU,WAIR,OAHAD,GAAmB,GAEnBE,OAAOC,iBAAiB,SAAUC,GAC3B,WAELF,OAAOG,oBAAoB,SAAUD,EACtC,CACF,GAAE,IAEH,IAAMA,EAAe,WACnB,IAAME,EAAiBJ,OAAOK,QAI5BP,EAFEM,GAAkB,GAAKA,GAAkB,GAO9C,EAED,OACE,iCACE,mBAAQE,UAAS,iBAAYT,EAAkB,UAAY,UAA3D,UACE,0BACG,yBAAML,GAAa,SAAC,EAAD,KAAe,SAAC,EAAD,WAGvC,0BACGE,GAAY,SAACa,EAAA,EAAD,KAAc,SAAC,KAAD,QAIlC,C","sources":["components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","components/Menu/Menu.styled.js","components/Menu/Menu.jsx","components/Header/Header.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DivStyle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.8em;\n  margin-left: auto;\n\n  p {\n    border: 1px solid #000;\n    border-radius: 1em;\n    padding: 0.2em 0.5em;\n    transition: 1s;\n    &:hover,\n    &:focus {\n      scale: 1.1;\n      transition: 1s;\n    }\n  }\n\n   button {\n    transition: 0.8s; \n    width: 120px;\n    height: 50px;\n    padding: 0.3em 0.3em;\n    border: black solid 1px;\n    border-radius: 30px;\n    background-color: transparent;\n    &:hover,\n    &:focus {\n      scale: 1.1;\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from '../../redux/auth/auth';\nimport { selectUser } from '../../redux/auth/authSelectors';\nimport { NavLink } from 'react-router-dom';\nimport { DivStyle } from './UserMenu.styled';\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector(selectUser);\n  return (\n    <>\n      <NavLink to=\"/contacts\">\n        Contacts\n      </NavLink>\n      <DivStyle>\n        <p>{name}</p>\n        <button onClick={() => dispatch(logOut())}>Log out</button>\n      </DivStyle>\n    </>\n  );\n};\n\nexport default UserMenu; ","import styled from 'styled-components';\n\nexport const ListStyle = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 1.5em;\n  margin-left: auto;\n`;\n","import { NavLink } from 'react-router-dom';\nimport { ListStyle } from './Menu.styled';\n\nconst AuthMenu = () => {\n  return (\n    <>\n      <NavLink to=\"/\">\n        Home\n      </NavLink>\n      <ListStyle>\n        <li>\n          <NavLink to=\"/register\">\n            Register\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/login\">\n            Login\n          </NavLink>\n        </li>\n      </ListStyle>\n    </>\n  );\n};\n\nexport default AuthMenu;\n","import React, { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn, selectLoading } from '../../redux/auth/authSelectors';\nimport UserMenu from '../UserMenu/UserMenu';\nimport AuthMenu from '../Menu/Menu';\nimport Loading from '../Loading/Loading';\nimport './Header.module.css';\n\nconst Header = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isLoading = useSelector(selectLoading);\n\n  const [isHeaderVisible, setIsHeaderVisible] = useState(false);\n\n  useEffect(() => {\n    setIsHeaderVisible(true);\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const handleScroll = () => {\n    const scrollPosition = window.scrollY;\n\n    if (scrollPosition >= 0 && scrollPosition <= 25) {\n\n      setIsHeaderVisible(true);\n    } else {\n\n      setIsHeaderVisible(false);\n    }\n  };\n\n  return (\n    <>\n      <header className={`header ${isHeaderVisible ? 'visible' : 'hidden'}`}>\n        <div>\n          {<nav>{isLoggedIn ? <UserMenu /> : <AuthMenu />}</nav>}\n        </div>\n      </header>\n      <main>\n        {isLoading ? <Loading /> : <Outlet />}\n      </main>\n    </>\n  );\n};\n\nexport default Header;\n\n"],"names":["DivStyle","styled","dispatch","useDispatch","name","useSelector","selectUser","to","onClick","logOut","ListStyle","isLoggedIn","selectIsLoggedIn","isLoading","selectLoading","useState","isHeaderVisible","setIsHeaderVisible","useEffect","window","addEventListener","handleScroll","removeEventListener","scrollPosition","scrollY","className","Loading"],"sourceRoot":""}